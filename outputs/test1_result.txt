1 KEYWORD const in line 1
2 KEYWORD char in line 1
3 IDENTIFIER c in line 1
4 SEPARATOR = in line 1
5 CHAR c in line 1
6 SEPARATOR ; in line 1
7 KEYWORD const in line 2
8 KEYWORD int in line 2
9 IDENTIFIER MAX_N in line 2
10 SEPARATOR = in line 2
11 UNSIGNED_INTEGER 123456 in line 2
12 SEPARATOR , in line 2
13 IDENTIFIER MIN_N in line 2
14 SEPARATOR = in line 2
15 SEPARATOR - in line 2
16 UNSIGNED_INTEGER 12345777 in line 2
17 SEPARATOR , in line 2
18 IDENTIFIER ZERO in line 2
19 SEPARATOR = in line 2
20 ZERO 0 in line 2
21 SEPARATOR ; in line 2
22 KEYWORD const in line 3
23 KEYWORD char in line 3
24 IDENTIFIER C in line 3
25 SEPARATOR = in line 3
26 CHAR C in line 3
27 SEPARATOR , in line 3
28 IDENTIFIER space in line 3
29 SEPARATOR = in line 3
[ERROR] in line 3: Invalid symbol for single quote char:  
30 UNKNOWN_TYPE   in line 3
[ERROR] in line 3: Invalid symbol for single quote char: ;
31 UNKNOWN_TYPE ; in line 3
32 KEYWORD char in line 5
33 IDENTIFIER underscore in line 5
34 SEPARATOR = in line 5
35 CHAR _ in line 5
36 SEPARATOR ; in line 5
37 KEYWORD int in line 6
38 IDENTIFIER dp in line 6
39 SEPARATOR [ in line 6
40 IDENTIFIER MAX_N in line 6
41 SEPARATOR ] in line 6
42 SEPARATOR ; in line 6
43 KEYWORD int in line 7
44 IDENTIFIER ans in line 7
45 SEPARATOR ; in line 7
46 KEYWORD int in line 8
47 IDENTIFIER precomputed in line 8
48 SEPARATOR ; in line 8
49 KEYWORD int in line 9
50 IDENTIFIER has_error in line 9
51 SEPARATOR ; in line 9
52 KEYWORD char in line 10
53 IDENTIFIER number_char in line 10
54 SEPARATOR = in line 10
55 CHAR 1 in line 10
56 SEPARATOR ; in line 10
57 KEYWORD void in line 12
58 IDENTIFIER no_statement in line 12
59 SEPARATOR ( in line 12
60 KEYWORD int in line 12
61 IDENTIFIER i in line 12
62 SEPARATOR , in line 12
63 KEYWORD int in line 12
64 IDENTIFIER j in line 12
65 SEPARATOR ) in line 12
66 SEPARATOR { in line 12
67 KEYWORD const in line 13
68 KEYWORD char in line 13
69 IDENTIFIER S in line 13
70 SEPARATOR = in line 13
71 CHAR S in line 13
72 SEPARATOR ; in line 13
73 KEYWORD int in line 15
74 IDENTIFIER n in line 15
75 SEPARATOR ; in line 15
76 SEPARATOR } in line 16
77 KEYWORD void in line 18
78 IDENTIFIER dummy_test in line 18
79 SEPARATOR ( in line 18
80 SEPARATOR ) in line 18
81 SEPARATOR { in line 18
82 KEYWORD const in line 19
83 KEYWORD char in line 19
84 IDENTIFIER C in line 19
85 SEPARATOR = in line 19
86 CHAR A in line 19
87 SEPARATOR ; in line 19
88 KEYWORD const in line 20
89 KEYWORD int in line 20
90 IDENTIFIER n1 in line 20
91 SEPARATOR = in line 20
92 UNSIGNED_INTEGER 1 in line 20
93 SEPARATOR ; in line 20
94 KEYWORD int in line 22
95 IDENTIFIER c_int in line 22
96 SEPARATOR , in line 22
97 IDENTIFIER i in line 22
98 SEPARATOR ; in line 22
99 KEYWORD char in line 23
100 IDENTIFIER ch in line 23
101 SEPARATOR , in line 23
102 IDENTIFIER chs in line 23
103 SEPARATOR [ in line 23
104 UNSIGNED_INTEGER 10 in line 23
105 SEPARATOR ] in line 23
106 SEPARATOR ; in line 23
107 KEYWORD int in line 24
108 IDENTIFIER j in line 24
109 SEPARATOR ; in line 24
110 IDENTIFIER i in line 26
111 SEPARATOR = in line 26
112 SEPARATOR + in line 26
113 ZERO 0 in line 26
114 SEPARATOR ; in line 26
115 IDENTIFIER j in line 27
116 SEPARATOR = in line 27
117 SEPARATOR + in line 27
118 IDENTIFIER i in line 27
119 SEPARATOR + in line 27
120 UNSIGNED_INTEGER 5 in line 27
121 SEPARATOR ; in line 27
122 IDENTIFIER j in line 28
123 SEPARATOR = in line 28
124 SEPARATOR - in line 28
125 IDENTIFIER i in line 28
126 SEPARATOR - in line 28
127 IDENTIFIER j in line 28
128 SEPARATOR ; in line 28
129 IDENTIFIER i in line 29
130 SEPARATOR = in line 29
131 IDENTIFIER i in line 29
132 SEPARATOR / in line 29
133 UNSIGNED_INTEGER 1 in line 29
134 SEPARATOR ; in line 29
135 IDENTIFIER j in line 30
136 SEPARATOR = in line 30
137 SEPARATOR - in line 30
138 UNSIGNED_INTEGER 1 in line 30
139 SEPARATOR * in line 30
140 IDENTIFIER j in line 30
141 SEPARATOR ; in line 30
142 IDENTIFIER i in line 31
143 SEPARATOR = in line 31
144 SEPARATOR - in line 31
145 ZERO 0 in line 31
146 SEPARATOR ; in line 31
147 SEPARATOR ; in line 33
148 SEPARATOR ; in line 33
149 SEPARATOR { in line 34
150 SEPARATOR ; in line 34
151 SEPARATOR } in line 34
152 SEPARATOR { in line 35
153 SEPARATOR ; in line 35
154 SEPARATOR { in line 36
155 SEPARATOR { in line 36
156 SEPARATOR ; in line 36
157 SEPARATOR } in line 36
158 SEPARATOR } in line 36
159 SEPARATOR } in line 37
160 SEPARATOR { in line 38
161 SEPARATOR } in line 38
162 KEYWORD do in line 40
163 IDENTIFIER i in line 40
164 SEPARATOR = in line 40
165 IDENTIFIER i in line 40
166 SEPARATOR + in line 40
167 UNSIGNED_INTEGER 1 in line 40
168 SEPARATOR ; in line 40
169 KEYWORD while in line 41
170 SEPARATOR ( in line 41
171 IDENTIFIER i in line 41
172 SEPARATOR < in line 41
173 IDENTIFIER j in line 41
174 SEPARATOR ) in line 41
175 KEYWORD do in line 43
176 SEPARATOR { in line 43
177 IDENTIFIER i in line 44
178 SEPARATOR = in line 44
179 IDENTIFIER i in line 44
180 SEPARATOR - in line 44
181 UNSIGNED_INTEGER 1 in line 44
182 SEPARATOR ; in line 44
183 IDENTIFIER j in line 45
184 SEPARATOR = in line 45
185 IDENTIFIER j in line 45
186 SEPARATOR + in line 45
187 UNSIGNED_INTEGER 1 in line 45
188 SEPARATOR ; in line 45
189 SEPARATOR } in line 46
190 KEYWORD while in line 46
191 SEPARATOR ( in line 46
192 IDENTIFIER i in line 46
193 SEPARATOR > in line 46
194 IDENTIFIER j in line 46
195 SEPARATOR ) in line 46
196 KEYWORD for in line 48
197 SEPARATOR ( in line 48
198 IDENTIFIER i in line 48
199 SEPARATOR = in line 48
200 IDENTIFIER j in line 48
201 SEPARATOR ; in line 48
202 IDENTIFIER i in line 48
203 SEPARATOR >= in line 48
204 ZERO 0 in line 48
205 SEPARATOR ; in line 48
206 IDENTIFIER i in line 48
207 SEPARATOR = in line 48
208 IDENTIFIER i in line 48
209 SEPARATOR - in line 48
210 UNSIGNED_INTEGER 1 in line 48
211 SEPARATOR ) in line 48
212 SEPARATOR { in line 48
213 SEPARATOR } in line 48
214 IDENTIFIER no_statement in line 50
215 SEPARATOR ( in line 50
216 IDENTIFIER i in line 50
217 SEPARATOR , in line 50
218 IDENTIFIER j in line 50
219 SEPARATOR ) in line 50
220 SEPARATOR ; in line 50
221 KEYWORD scanf in line 52
222 SEPARATOR ( in line 52
223 IDENTIFIER i in line 52
224 SEPARATOR , in line 52
225 IDENTIFIER j in line 52
226 SEPARATOR ) in line 52
227 SEPARATOR ; in line 52
228 KEYWORD printf in line 53
229 SEPARATOR ( in line 53
230 IDENTIFIER i in line 53
231 SEPARATOR + in line 53
232 IDENTIFIER j in line 53
233 SEPARATOR ) in line 53
234 SEPARATOR ; in line 53
235 SEPARATOR } in line 54
236 KEYWORD void in line 56
237 IDENTIFIER error in line 56
238 SEPARATOR ( in line 56
239 KEYWORD int in line 56
240 IDENTIFIER n in line 56
241 SEPARATOR ) in line 56
242 SEPARATOR { in line 56
243 KEYWORD printf in line 57
244 SEPARATOR ( in line 57
245 STRING Error: the input number n is too large! n:  in line 57
246 SEPARATOR , in line 57
247 IDENTIFIER n in line 57
248 SEPARATOR ) in line 57
249 SEPARATOR ; in line 57
250 KEYWORD printf in line 58
251 SEPARATOR ( in line 58
252 STRING n should be less than  in line 58
253 SEPARATOR , in line 58
254 IDENTIFIER MAX_N in line 58
255 SEPARATOR ) in line 58
256 SEPARATOR ; in line 58
257 IDENTIFIER has_error in line 59
258 SEPARATOR = in line 59
259 UNSIGNED_INTEGER 1 in line 59
260 SEPARATOR ; in line 59
261 SEPARATOR } in line 60
262 KEYWORD int in line 62
263 IDENTIFIER fibonacci_recursive in line 62
264 SEPARATOR ( in line 62
265 KEYWORD int in line 62
266 IDENTIFIER n in line 62
267 SEPARATOR ) in line 62
268 SEPARATOR { in line 62
269 KEYWORD if in line 63
270 SEPARATOR ( in line 63
271 IDENTIFIER n in line 63
272 SEPARATOR <= in line 63
273 ZERO 0 in line 63
274 SEPARATOR ) in line 63
275 SEPARATOR { in line 63
276 KEYWORD return in line 64
277 SEPARATOR ( in line 64
278 ZERO 0 in line 64
279 SEPARATOR ) in line 64
280 SEPARATOR ; in line 64
281 SEPARATOR } in line 65
282 KEYWORD if in line 66
283 SEPARATOR ( in line 66
284 IDENTIFIER n in line 66
285 SEPARATOR == in line 66
286 UNSIGNED_INTEGER 1 in line 66
287 SEPARATOR ) in line 66
288 SEPARATOR { in line 66
289 KEYWORD return in line 67
290 SEPARATOR ( in line 67
291 UNSIGNED_INTEGER 1 in line 67
292 SEPARATOR ) in line 67
293 SEPARATOR ; in line 67
294 SEPARATOR } in line 68
295 KEYWORD if in line 69
296 SEPARATOR ( in line 69
297 IDENTIFIER n in line 69
298 SEPARATOR > in line 69
299 IDENTIFIER MAX_N in line 69
300 SEPARATOR ) in line 69
301 SEPARATOR { in line 69
302 IDENTIFIER error in line 70
303 SEPARATOR ( in line 70
304 IDENTIFIER n in line 70
305 SEPARATOR ) in line 70
306 SEPARATOR ; in line 70
307 KEYWORD return in line 71
308 SEPARATOR ( in line 71
309 SEPARATOR - in line 71
310 UNSIGNED_INTEGER 1 in line 71
311 SEPARATOR ) in line 71
312 SEPARATOR ; in line 71
313 SEPARATOR } in line 72
314 KEYWORD return in line 73
315 SEPARATOR ( in line 73
316 IDENTIFIER fibonacci_recursive in line 73
317 SEPARATOR ( in line 73
318 IDENTIFIER n in line 73
319 SEPARATOR - in line 73
320 UNSIGNED_INTEGER 2 in line 73
321 SEPARATOR ) in line 73
322 SEPARATOR + in line 73
323 IDENTIFIER fibonacci_recursive in line 73
324 SEPARATOR ( in line 73
325 IDENTIFIER n in line 73
326 SEPARATOR - in line 73
327 UNSIGNED_INTEGER 1 in line 73
328 SEPARATOR ) in line 73
329 SEPARATOR ) in line 73
330 SEPARATOR ; in line 73
331 SEPARATOR } in line 74
332 KEYWORD void in line 76
333 IDENTIFIER precompute in line 76
334 SEPARATOR ( in line 76
335 SEPARATOR ) in line 76
336 SEPARATOR { in line 76
337 KEYWORD int in line 77
338 IDENTIFIER i in line 77
339 SEPARATOR ; in line 77
340 IDENTIFIER dp in line 79
341 SEPARATOR [ in line 79
342 ZERO 0 in line 79
343 SEPARATOR ] in line 79
344 SEPARATOR = in line 79
345 ZERO 0 in line 79
346 SEPARATOR ; in line 79
347 IDENTIFIER dp in line 80
348 SEPARATOR [ in line 80
349 UNSIGNED_INTEGER 1 in line 80
350 SEPARATOR ] in line 80
351 SEPARATOR = in line 80
352 UNSIGNED_INTEGER 1 in line 80
353 SEPARATOR ; in line 80
354 KEYWORD for in line 81
355 SEPARATOR ( in line 81
356 IDENTIFIER i in line 81
357 SEPARATOR = in line 81
358 UNSIGNED_INTEGER 2 in line 81
359 SEPARATOR ; in line 81
360 IDENTIFIER i in line 81
361 SEPARATOR < in line 81
362 IDENTIFIER MAX_N in line 81
363 SEPARATOR ; in line 81
364 IDENTIFIER i in line 81
365 SEPARATOR = in line 81
366 IDENTIFIER i in line 81
367 SEPARATOR + in line 81
368 UNSIGNED_INTEGER 1 in line 81
369 SEPARATOR ) in line 81
370 SEPARATOR { in line 81
371 IDENTIFIER dp in line 82
372 SEPARATOR [ in line 82
373 IDENTIFIER i in line 82
374 SEPARATOR ] in line 82
375 SEPARATOR = in line 82
376 IDENTIFIER dp in line 82
377 SEPARATOR [ in line 82
378 IDENTIFIER i in line 82
379 SEPARATOR - in line 82
380 UNSIGNED_INTEGER 2 in line 82
381 SEPARATOR ] in line 82
382 SEPARATOR + in line 82
383 IDENTIFIER dp in line 82
384 SEPARATOR [ in line 82
385 IDENTIFIER i in line 82
386 SEPARATOR - in line 82
387 UNSIGNED_INTEGER 1 in line 82
388 SEPARATOR ] in line 82
389 SEPARATOR ; in line 82
390 SEPARATOR } in line 83
391 IDENTIFIER precomputed in line 84
392 SEPARATOR = in line 84
393 UNSIGNED_INTEGER 1 in line 84
394 SEPARATOR ; in line 84
395 SEPARATOR } in line 85
396 KEYWORD int in line 87
397 IDENTIFIER fibonacci_dp in line 87
398 SEPARATOR ( in line 87
399 KEYWORD int in line 87
400 IDENTIFIER n in line 87
401 SEPARATOR ) in line 87
402 SEPARATOR { in line 87
403 KEYWORD if in line 88
404 SEPARATOR ( in line 88
405 IDENTIFIER n in line 88
406 SEPARATOR <= in line 88
407 ZERO 0 in line 88
408 SEPARATOR ) in line 88
409 SEPARATOR { in line 88
410 KEYWORD return in line 89
411 SEPARATOR ( in line 89
412 ZERO 0 in line 89
413 SEPARATOR ) in line 89
414 SEPARATOR ; in line 89
415 SEPARATOR } in line 90
416 KEYWORD if in line 91
417 SEPARATOR ( in line 91
418 IDENTIFIER n in line 91
419 SEPARATOR > in line 91
420 IDENTIFIER MAX_N in line 91
421 SEPARATOR ) in line 91
422 SEPARATOR { in line 91
423 IDENTIFIER error in line 92
424 SEPARATOR ( in line 92
425 IDENTIFIER n in line 92
426 SEPARATOR ) in line 92
427 SEPARATOR ; in line 92
428 KEYWORD return in line 93
429 SEPARATOR ( in line 93
430 SEPARATOR - in line 93
431 UNSIGNED_INTEGER 1 in line 93
432 SEPARATOR ) in line 93
433 SEPARATOR ; in line 93
434 SEPARATOR } in line 94
435 KEYWORD if in line 96
436 SEPARATOR ( in line 96
437 IDENTIFIER precomputed in line 96
438 SEPARATOR == in line 96
439 ZERO 0 in line 96
440 SEPARATOR ) in line 96
441 SEPARATOR { in line 96
442 IDENTIFIER precompute in line 97
443 SEPARATOR ( in line 97
444 SEPARATOR ) in line 97
445 SEPARATOR ; in line 97
446 SEPARATOR } in line 98
447 KEYWORD return in line 99
448 SEPARATOR ( in line 99
449 IDENTIFIER dp in line 99
450 SEPARATOR [ in line 99
451 IDENTIFIER n in line 99
452 SEPARATOR ] in line 99
453 SEPARATOR ) in line 99
454 SEPARATOR ; in line 99
455 SEPARATOR } in line 100
456 KEYWORD void in line 102
457 KEYWORD main in line 102
458 SEPARATOR ( in line 102
459 SEPARATOR ) in line 102
460 SEPARATOR { in line 102
461 KEYWORD int in line 103
462 IDENTIFIER n_tests in line 103
463 SEPARATOR , in line 103
464 IDENTIFIER i in line 103
465 SEPARATOR , in line 103
466 IDENTIFIER n in line 103
467 SEPARATOR , in line 103
468 IDENTIFIER ans_rec in line 103
469 SEPARATOR , in line 103
470 IDENTIFIER ans_dp in line 103
471 SEPARATOR ; in line 103
472 IDENTIFIER dummy_test in line 105
473 SEPARATOR ( in line 105
474 SEPARATOR ) in line 105
475 SEPARATOR ; in line 105
476 IDENTIFIER precompute in line 106
477 SEPARATOR ( in line 106
478 SEPARATOR ) in line 106
479 SEPARATOR ; in line 106
480 KEYWORD scanf in line 107
481 SEPARATOR ( in line 107
482 IDENTIFIER n_tests in line 107
483 SEPARATOR ) in line 107
484 SEPARATOR ; in line 107
485 KEYWORD for in line 108
486 SEPARATOR ( in line 108
487 IDENTIFIER i in line 108
488 SEPARATOR = in line 108
489 ZERO 0 in line 108
490 SEPARATOR ; in line 108
491 IDENTIFIER i in line 108
492 SEPARATOR < in line 108
493 IDENTIFIER n_tests in line 108
494 SEPARATOR ; in line 108
495 IDENTIFIER i in line 108
496 SEPARATOR = in line 108
497 IDENTIFIER i in line 108
498 SEPARATOR + in line 108
499 UNSIGNED_INTEGER 1 in line 108
500 SEPARATOR ) in line 108
501 SEPARATOR { in line 108
502 KEYWORD printf in line 109
503 SEPARATOR ( in line 109
504 STRING Input a number n:  in line 109
505 SEPARATOR ) in line 109
506 SEPARATOR ; in line 109
507 KEYWORD scanf in line 110
508 SEPARATOR ( in line 110
509 IDENTIFIER n in line 110
510 SEPARATOR ) in line 110
511 SEPARATOR ; in line 110
512 IDENTIFIER has_error in line 111
513 SEPARATOR = in line 111
514 ZERO 0 in line 111
515 SEPARATOR ; in line 111
516 IDENTIFIER ans_rec in line 112
517 SEPARATOR = in line 112
518 IDENTIFIER fibonacci_recursive in line 112
519 SEPARATOR ( in line 112
520 IDENTIFIER n in line 112
521 SEPARATOR ) in line 112
522 SEPARATOR ; in line 112
523 IDENTIFIER ans_dp in line 113
524 SEPARATOR = in line 113
525 IDENTIFIER fibonacci_dp in line 113
526 SEPARATOR ( in line 113
527 IDENTIFIER n in line 113
528 SEPARATOR ) in line 113
529 SEPARATOR ; in line 113
530 KEYWORD if in line 114
531 SEPARATOR ( in line 114
532 IDENTIFIER has_error in line 114
533 SEPARATOR == in line 114
534 ZERO 0 in line 114
535 SEPARATOR ) in line 114
536 SEPARATOR { in line 114
537 KEYWORD if in line 115
538 SEPARATOR ( in line 115
539 IDENTIFIER ans_rec in line 115
540 SEPARATOR != in line 115
541 IDENTIFIER ans_dp in line 115
542 SEPARATOR ) in line 115
543 SEPARATOR { in line 115
544 KEYWORD printf in line 116
545 SEPARATOR ( in line 116
546 STRING One of the fib function is buggy on input  in line 116
547 SEPARATOR , in line 116
548 IDENTIFIER n in line 116
549 SEPARATOR ) in line 116
550 SEPARATOR ; in line 116
551 SEPARATOR } in line 117
552 KEYWORD else in line 117
553 SEPARATOR { in line 117
554 KEYWORD printf in line 118
555 SEPARATOR ( in line 118
556 STRING fib( in line 118
557 SEPARATOR , in line 118
558 IDENTIFIER n in line 118
559 SEPARATOR ) in line 118
560 SEPARATOR ; in line 118
561 KEYWORD printf in line 119
562 SEPARATOR ( in line 119
563 STRING ) =  in line 119
564 SEPARATOR , in line 119
565 IDENTIFIER ans_rec in line 119
566 SEPARATOR ) in line 119
567 SEPARATOR ; in line 119
568 SEPARATOR } in line 120
569 SEPARATOR } in line 121
570 SEPARATOR } in line 122
571 SEPARATOR } in line 123
572 END_OF_FILE EOF in line 124
